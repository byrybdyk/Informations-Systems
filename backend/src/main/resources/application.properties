spring.application.name=lb1
spring.datasource.url=jdbc:postgresql://localhost:5432/LabWork
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.springframework.security=DEBUG

#spring.security.oauth2.client.registration.keycloak.client-id=IS-client
#spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/realms/IS-realm
#spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8080/login/oauth2/code/keycloak

spring.security.oauth2.client.registration.keycloak.client-id=IS-client
spring.security.oauth2.client.registration.keycloak.scope=openid,profile
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8080/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.client-name=Keycloak
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8180/auth/realms/IS-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8180/auth/realms/IS-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8180/auth/realms/IS-realm/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8180/auth/realms/IS-realm/protocol/openid-connect/userinfo




